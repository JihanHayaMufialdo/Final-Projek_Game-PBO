let hero;
let maps;
let screen = 0;

function setup() {
 hero = new Hero(250,450,40,20);
  maps = new Map(600,470);
  maps.init();
}

function draw() {
  if(screen==0){
    startGame();
  }else if(screen==1){
    game();
  }else if(screen==2){
    endGame();
  }
}

function mousePressed(){
	if(screen==0){
  	screen=1
  }else if(screen==2){
  	screen=0
  }
}

function startGame(){
  background(0, 0, 0)
  fill(255)
  fill('#FFC107')
  textFont('Courier')
  textSize(14);
  text("Jihan Haya Mufialdo \n2117051095",100,height - 25);
  text("Shafa Auliya \n2117051042",535,height - 25);
  textAlign(CENTER);
  fill('#fff')
  textFont('Algerian')
  textSize(32);
  hero.resetScore();
  text('WELCOME TO GAME CATCH THE FOOD', width / 2, height / 2)
  fill('#fff')
  textFont('Courier')
  textSize(20);
  text('Click to Start', width / 2, height / 2 + 100);
  text('--------------', width / 2, height / 2 + 115)
}

function game(){
  background(0, 0, 0)
  fill('#fff');
  textSize(20);
  text("Score     : " + hero.getScore(),79,20);
  text("HighScore : " + hero.saveScore(),79,40);
  hero.show();
  
  for(let monster of maps.monsters){
    monster.show();
    if(dist(monster.x,monster.y,hero.x,hero.y) < 20){
      maps.monsters.splice(maps.monsters.indexOf(monster),1);
      if(monster.color===1){
        hero.increaseScore();
        if(hero.getScore() % 2 == 0){
          maps.init();
        }
      }else if(monster.color===2){
        screen = 2;
      }
    }
  }
  
  for(var monster of maps.monsters){
    if(monster.y > 600){
      maps.monsters.splice(maps.monsters.indexOf(monster),1);
      var posY = random();
      var posX = random(0,this.height);
      monster = new Monster(posX,posY,10,10);
      maps.monsters.push(monster);
    }
  }
  
  if(keyIsDown(LEFT_ARROW)){
    hero.moveLeft();
  }else if(keyIsDown(RIGHT_ARROW)){
    hero.moveRight();
  }
}

function endGame(){
  background(0, 0, 0)
  textAlign(CENTER);
  fill('#Ff0000')
  textFont('Algerian')
  textSize(60);
  text('GAME OVER', width / 2, height / 2)
  fill('#fff')
  textFont('Courier')
  textSize(20);
  text("SCORE = " + hero.getScore(), width / 2, height / 2 + 60)
  text("HIGHSCORE = "+hero.saveScore(), width / 2, height / 2 + 80)
  text('Click to Play Again', width / 2, height / 2 + 140);
  text('--------------------', width / 2, height / 2 + 155)
}

class Entity{
  constructor(x,y,width,height){
    this.height = height;
    this.width = width;
    this.x = x;
    this.y = y;
  }
  attack(){
    
  }
  moveRight(){ 
      if(this.x < 600){    
        this.x += 2;
      }
  }
  moveLeft(){ 
      if(this.x > 0){
        this.x -= 2;
      }
  }
  moveDown(){
      // if(this.y < 600){
      //   this.y += 2;
      // }
  }
  moveUp(){ 
      // if(this.y > 0){
      //   this.y -= 2;
      // }
  }
}

class Hero extends Entity{
  constructor(x,y,width,height){
    super(x,y,width,height);
    this.life = 0;
    this.score = 0;
    this.highscore = 0;
  }
  show(){
    fill('#f0A');
    rect(this.x,this.y,this.width,this.height);
    noFill();
  }
  increaseScore(){
    this.score++;
  }
  getScore(){
    return this.score;
  }
  resetScore(){
    this.score = 0;
  }
  calculateLife(){
    
  }
  saveScore(){
    if(this.highscore<this.score){
      this.highscore = this.score;
    }
    return this.highscore;
  }
}

class Monster extends Entity{
  constructor(x,y,width,height){
    super(x,y,width,height);
    this.life = 0;
    this.color = 0;
    this.effect = 0;
    this.type = random(0,2);
  }
  
  show(){
    stroke(0);
    if(this.type > 1){
      this.color = 1;
      fill('#03A9F4');
      ellipse(this.x,this.y,20,20);
      noFill();
    }else{
      this.color = 2;
      fill('#f00');
      ellipse(this.x,this.y,25,25);
      noFill();
    }
    this.y += 2;  
  }
  
  moveRandom(){
    
  }
  saveScore(){
    
  }
}

class Map{
  constructor(width,height){
    this.height = height;
    this.width = width;
    this.monsters = [];
  }
  init(){
    createCanvas(this.width,this.height);
    for(let i=0; i<10; i++){
      var posY = random(this.width,this.height);
      var posX = random(0,this.height);
      var monster = new Monster(posX,posY,10,10);
      this.monsters.push(monster);
    }
  }
  move(){
    
  }
}

class Level{
  constructor(currentLevel,latestLevel,maxLevel){
    this.currentLevel = 0;
    this.latestLevel = 0;
    this.maxLevel = 0;
  }
  
  setLevel(){
    
  }
  
  getCurrentLevel(){
    
  }
}
